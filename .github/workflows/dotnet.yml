name: Build
on:
  #schedule:
  #  - cron: "30 2 1 * *"
  push:
    branches: [master]
  workflow_dispatch:
  repository_dispatch:
    types: [build]

concurrency: 
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: windows-2019
    

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Install 7Zip PowerShell Module
        shell: powershell
        run: Install-Module 7Zip4PowerShell -Force -Verbose


      #- name: Setup MSBuild
      # uses: microsoft/setup-msbuild@v1

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.1  

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1.2.0

      - name: Restore NuGet packages
        run: nuget restore WebNovelConverter.sln

  
    #  - name: setup-msbuild
    #    uses: microsoft/setup-msbuild@v1.1

      - name: Build WebNovelConverte proj
        id: WebNovelConverter
        run: msbuild WebNovelConverter.sln  -t:rebuild -property:Configuration=Release

              
      - name: Build Artifact
        shell: cmd
        id: artifacts
        run: powershell Compress-7Zip "\Release" -ArchiveFileName "WebNovelConverter.zip" -Format Zip

      - name: Prepare release tag
        shell: bash
        id: date
        run: echo "date=$(date +'v%Y-%m-%d')" >> $GITHUB_OUTPUT
        
      - name: add timestamp
        shell: bash
        id: date2
        run: echo "date2=$(date +'v%Y_%m_%d')" >> $GITHUB_OUTPUT
      
      - name: rename files
        shell: bash
        id: rename
        run: cp "./WebNovelConverter.zip  "./${{ steps.date2.outputs.date2 }}.WebNovelConverter.zip"

      - name: Upload build to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: \${{ steps.date2.outputs.date2 }}.WebNovelConverter.zip
          tag: ${{ steps.date.outputs.date }}
          overwrite: true
          file_glob: true
          shell: bash

#- name: Restore Packages
#  run: nuget restore MySolution.sln


